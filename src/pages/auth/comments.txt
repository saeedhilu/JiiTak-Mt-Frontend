std2@gmail.com
P@ssw0rd123!




// import React, { useState } from "react";
// import { useQuery } from "react-query";
// import {
//   Table,
//   TableHeader,
//   TableBody,
//   TableRow,
//   TableHead,
//   TableCell,
// } from "@/components/ui/table";
// import {
//   Pagination,
//   PaginationContent,
//   PaginationItem,
//   PaginationLink,
//   PaginationPrevious,
//   PaginationNext,
// } from "@/components/ui/pagination";
// import { fetchUserData } from "@/services/users/fetchUserData";
// import Spinner from "@/components/spinner/Spinner";

// const UserList = () => {
//   const [page, setPage] = useState(1); // Track the current page
//   const { data: usersData, isLoading, error } = useQuery(
//     ["users", page],
//     () => fetchUserData(page), // Pass the page number to fetchUserData
//     { keepPreviousData: true } // Keep previous data while loading new pages
//   );

//   if (isLoading) return <Spinner color="orange" />;
//   if (error) return <div>Error loading user data</div>;

//   const { results: users, count, next, previous } = usersData;
//   const totalPages = Math.ceil(count / 10); // Assuming 10 items per page

//   const handlePageChange = (newPage) => {
//     if (newPage >= 1 && newPage <= totalPages) {
//       setPage(newPage);
//     }
//   };

//   return (
//     <div className="p-4 h-full  flex flex-col justify-between">

//       <Table className="flex-grow">
//         <TableHeader>
//           <TableRow>
//             <TableHead className="text-lg font-bold">ID</TableHead>
//             <TableHead className="text-lg font-bold">Email</TableHead>
//             <TableHead className="text-lg font-bold">Role</TableHead>
//             <TableHead className="text-lg font-bold">Gender</TableHead>
//             <TableHead className="text-lg font-bold">Status</TableHead>
//           </TableRow>
//         </TableHeader>
//         <TableBody>
//           {users.map((user) => (
//             <TableRow key={user.id}>
//               <TableCell className="text-lg font-semibold py-2">{user.id}</TableCell>
//               <TableCell className="text-lg font-semibold py-2">{user.email}</TableCell>
//               <TableCell className="text-lg font-semibold py-2">{user.role}</TableCell>
//               <TableCell className="text-lg font-semibold py-2">{user.gender}</TableCell>
//               <TableCell className="text-lg font-semibold py-2">
//                 {user.is_active ? "Active" : "Inactive"}
//               </TableCell>
//             </TableRow>
//           ))}
//         </TableBody>
//       </Table>

//       {/* Pagination with bottom spacing */}
//       <Pagination className="mt-4 mb-8  flex justify-end">
//         <PaginationContent>
//           <PaginationPrevious
//             onClick={() => handlePageChange(page - 1)}
//             disabled={!previous}
//           />
//           {[...Array(totalPages).keys()].map((pageIndex) => (
//             <PaginationItem key={pageIndex}>
//               <PaginationLink
//                 isActive={pageIndex + 1 === page}
//                 onClick={() => handlePageChange(pageIndex + 1)}
//               >
//                 {pageIndex + 1}
//               </PaginationLink>
//             </PaginationItem>
//           ))}
//           <PaginationNext
//             onClick={() => handlePageChange(page + 1)}
//             disabled={!next}
//           />
//         </PaginationContent>
//       </Pagination>
//     </div>
//   );
// };

// export default UserList;











// import React, { useState } from "react";
// import { useQuery } from "react-query";
// import { Search } from 'lucide-react';
// import {
//   Table,
//   TableHeader,
//   TableBody,
//   TableRow,
//   TableHead,
//   TableCell,
// } from "@/components/ui/Table";
// import {
//   Pagination,
//   PaginationContent,
//   PaginationItem,
//   PaginationLink,
//   PaginationPrevious,
//   PaginationNext,
// } from "@/components/ui/pagination";
// import { fetchUserData } from "@/services/users/fetchUserData";
// import Spinner from "@/components/spinner/Spinner";
// import { Input } from "@/components/ui/input";

// const UserList = () => {
//   const [page, setPage] = useState(1);
//   const [searchTerm, setSearchTerm] = useState("");
//   const [searchTermSent, setSearchTermSent] = useState("");

//   const { data: usersData, isLoading, error } = useQuery(
//     ["users", page, searchTermSent],
//     () => fetchUserData(page, searchTermSent),
//   );

//   if (error) return <div className="text-red-500">Error loading user data</div>;

//   const { results: users, count, next, previous } = usersData || {};
//   const totalPages = Math.ceil(count +1000 / 10);

//   const handlePageChange = (newPage) => {
//     if (newPage >= 1 && newPage <= totalPages) {
//       setPage(newPage);
//     }
//   };

//   const handleSearchChange = (event) => {
//     setSearchTerm(event.target.value);
//   };

//   const handleSubmit = (event) => {
//     event.preventDefault(); 
//     setPage(1)
//     setSearchTermSent(searchTerm);
//   };

//   return (
//     <div className="p-4 h-full ">
//       <div className="mb-4 flex justify-between">
//         <h1 className="text-2xl font-semibold mb-4">登録ユーザー一覧</h1>
//         <div className="flex items-center gap-2">
//           <Search />
//           <form onSubmit={handleSubmit}>
//             <Input
//               type="text"
//               placeholder="検索"
//               value={searchTerm}
//               onChange={handleSearchChange}
//               className="w-80 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2"
//             />
//             <button type="submit" className="hidden">Submit</button>
//           </form>
//         </div>
//       </div>

//       <Table className="h-[500px]">
//         <TableHeader>
//           <TableRow>
//             <TableHead className="text-lg font-bold">ID</TableHead>
//             <TableHead className="text-lg font-bold">Email</TableHead>
//             <TableHead className="text-lg font-bold">Role</TableHead>
//             <TableHead className="text-lg font-bold">Gender</TableHead>
//             <TableHead className="text-lg font-bold">Status</TableHead>
//           </TableRow>
//         </TableHeader>
//         <TableBody >
//           {isLoading ? (
//             <TableRow>
//               <TableCell colSpan="5" className="text-center py-4">
//                 <Spinner color="orange" />
//               </TableCell>
//             </TableRow>
//           ) : users.length > 0 ? (
//             users.map((user) => (
//               <TableRow key={user.id} >
//                 <TableCell className="align-top text-lg font-semibold py-2">{user.id}</TableCell>
//                 <TableCell className="align-top text-lg font-semibold py-2">{user.email}</TableCell>
//                 <TableCell className="align-top text-lg font-semibold py-2">{user.role}</TableCell>
//                 <TableCell className="align-top text-lg font-semibold py-2">{user.gender}</TableCell>
//                 <TableCell className="align-top text-lg font-semibold py-2">
//                   {user.is_active ? "Active" : "Inactive"}
//                 </TableCell>
//               </TableRow>
//             ))
//           ) : (
//             <TableRow>
//               <TableCell colSpan="5" className="text-center py-4">
//                 No results found.
//               </TableCell>
//             </TableRow>
//           )}
//         </TableBody>
//       </Table>
//       {totalPages > 0 && (
//         <Pagination className="mt-4 mb-8 flex justify-end">
//           <PaginationContent>
//             <PaginationPrevious
//               onClick={() => handlePageChange(page - 1)}
//               disabled={!previous}
//             />
//             {[...Array(totalPages).keys()].map((pageIndex) => (
//               <PaginationItem key={pageIndex}>
//                 <PaginationLink
//                   className={`${pageIndex + 1 === page ?  'bg-orange  text-white' : 'bg-white' } hover:bg-orange hover:text-white cursor-pointer`}
//                   isActive={pageIndex + 1 === page}
//                   onClick={() => handlePageChange(pageIndex + 1)}
//                 >
//                   {pageIndex + 1}
//                 </PaginationLink>
//               </PaginationItem>
//             ))}
//             <PaginationNext
//               onClick={() => handlePageChange(page + 1)}
//               disabled={!next}
//             />
//           </PaginationContent>
//         </Pagination>
//       )}
//     </div>
//   );
// };

// export default UserList;





